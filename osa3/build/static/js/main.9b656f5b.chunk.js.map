{"version":3,"sources":["services/persons.js","components/App.js","index.js"],"names":["baseUrl","services_persons","axios","get","newObject","post","id","put","concat","delete","DelButton","_ref","deleteHandler","react_default","a","createElement","onClick","Person","props","name","number","App_DelButton","Persons","_ref2","persons","map","pers","App_Person","key","InputField","_ref3","handler","state","value","onChange","Form","_ref4","submitHandler","fieldHandler","onSubmit","App_InputField","type","Notification","_ref5","message","className","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addPerson","event","preventDefault","tulos","newName","p","includes","newPerson","newNumber","handleAdd","handleChange","field","setState","defineProperty","target","newFilter","error","info","_this2","personService","then","response","console","log","data","_this3","existingId","findIndex","window","confirm","setTimeout","catch","filter","_this4","person","find","App_Notification","App_Form","App_Persons","handleDelete","bind","React","Component","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.9b656f5b.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n//const baseUrl = 'http://localhost:3001/api/persons'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nconst create = (newObject) => {\r\n  return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nconst remove = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n  }\r\n\r\nexport default { getAll, create, update, remove }","import React from 'react';\nimport personService from '../services/persons';\nimport './puhelinluettelo.css';\n\nconst DelButton = ({deleteHandler, id}) => {\n//console.log('deleteHandeler id', id)\nreturn (\n<button onClick={deleteHandler(id)}>\n    Poista\n</button>\n)\n}\n\nconst Person = (props) => {\nreturn (\n<p>{props.name} : {props.number} <DelButton id={props.id} deleteHandler={props.deleteHandler}/></p>\n)\n}\n\nconst Persons = ({ persons, deleteHandler }) => {\nreturn (\n<div>\n    {persons.map(pers => <Person name={pers.name} number={pers.number} key={pers.name} id={pers.id} deleteHandler={deleteHandler}/>)}\n</div>\n)\n}\n\nconst InputField = ({ handler, state, name }) => {\nreturn (\n<div>\n    {name}: <input value={state} onChange={handler} />\n</div>\n)\n}\n\nconst Form = ({ submitHandler, fieldHandler, state }) => {\nreturn (\n<form onSubmit={submitHandler}>\n    <div>\n        <h2>Lisää uusi</h2>\n        <InputField name='nimi' state={state['newName']} handler={fieldHandler('newName')} />\n    </div>\n    <div>\n        <InputField name='numero' state={state['newNumber']} handler={fieldHandler('newNumber')} />\n    </div>\n    <div>\n        <button type=\"submit\">lisää</button>\n    </div>\n</form>\n\n)\n}\n\nconst Notification = ({ message, type }) => {\nif (message === null) {\nreturn null\n}\nreturn (\n<div className={type}>\n{message}\n</div>\n)\n}\n\nfunction Exists(persons, name) {\nreturn (\npersons.map(p => p.name).includes(name)\n)\n}\n\nfunction Filter(persons, name) {\nreturn (\npersons.filter(p => p.name.includes(name))\n)\n}\n\nclass App extends React.Component {\nconstructor(props) {\nsuper(props)\nthis.state = {\n    persons: [],\n    newName: '',\n    newNumber: '',\n    newFilter: '',\n    error: null,\n    info: null\n}\n}\n\ncomponentDidMount() {\n// console.log('did mount')\npersonService.getAll()\n    .then(response => {\n    console.log('promise fulfilled', response.data[0])\n    this.setState({ persons: response.data })\n    })\n}\n\nhandleAdd(tulos, newPerson){\nconsole.log('add alkaa', tulos, newPerson)\nif (!tulos) {\n    personService.create(newPerson)\n    .then(response => {\n    //   console.log(response)\n        this.setState({\n        persons: this.state.persons.concat(response.data),\n        info: `Henkilön ${this.state.newName} tiedot lisättiin palvelimelle`,\n        newName: '',\n        newNumber: ''\n        })\n    setTimeout(() => {\n        this.setState({info: null})\n        }, 5000)\n    })   \n    .catch(error => {\n        console.log('virhekoodi', error)\n        console.log('tiedot', newPerson)\n        this.setState({\n            //persons: this.state.persons.concat(response.data),\n            \n            error: `Virhe, henkilöä ${this.state.newName} ei lisätty palvelimelle`\n        })\n    setTimeout(() => {\n        this.setState({error: null})\n        }, 5000)\n    })      \n} else {\n    const existingId = this.state.persons[this.state.persons.findIndex(p => p.name === this.state.newName)].id;\n    if (window.confirm(`Henkilö ${this.state.newName} on jo luettelossa. Tallennetaanko uusi numero?`)) { \n        personService.update(existingId, newPerson)\n        .then(response => {\n            // console.log('addPerson change', response);\n            this.setState({\n                info: `Henkilön ${this.state.newName} tiedot päivitettiin palvelimelle`,\n                persons: this.state.persons.map(p => p.id !== response.data.id ? p : response.data),\n                newName: '',\n                newNumber: ''\n            })\n            setTimeout(() => {\n                this.setState({info: null})\n                }, 5000)\n        })\n        .catch(error => {\n            // console.log('poistettu henkilö!!!');\n            this.setState({\n                error: `Henkilö ${this.state.newName} on poistettu palvelimelta, lisätään se nyt uudelleen`,\n                persons: this.state.persons.filter(p => p.id !== existingId),\n                newName: '',\n                newNumber: ''\n            })\n            setTimeout(() => {\n                this.setState({error: null})\n                }, 5000)\n            this.handleAdd(false, newPerson)\n        })         \n    } else {\n        // console.log('else haara');\n        this.setState({\n            info: `Henkilön ${this.state.newName} tietoja ei päivitetty`,\n            newName: '',\n            newNumber: ''\n        })\n        setTimeout(() => {\n            this.setState({info: null})\n            }, 5000)\n    }\n}\n}\n\naddPerson = (event) => {\n\nevent.preventDefault();\nconst tulos = Exists(this.state.persons, this.state.newName);\nconst newPerson = { name: this.state.newName, number: this.state.newNumber };\n\nthis.handleAdd(tulos, newPerson)\n}\n\nhandleDelete(id){\nreturn (\n    () => {\n    // const name = this.state.persons[this.state.persons.findIndex(p => p.id === id)].name\n    const person = this.state.persons.find(p => p.id === id)\n    console.log('poistettava id', id)\n    console.log('person', person.name)\n    if (window.confirm(`Haluatko poistaa ${person.name} luettelosta?`)) { \n        personService.remove(id)\n        .then(response => {\n            // console.log('handleDelete', response)\n            this.setState({\n                info: `Henkilö ${person.name} poistettiin palvelimelta`,\n                persons: this.state.persons.filter(p => p.id !== id)\n            })\n            setTimeout(() => {\n                this.setState({info: null})\n                }, 5000)\n        })\n        .catch(error => {\n            console.log('on jo poistettu henkilö!!!');\n            this.setState({\n                error: `Henkilö ${person.name} on jo poistettu palvelimelta`,\n                persons: this.state.persons.filter(p => p.id !== id)\n            })\n            setTimeout(() => {\n                this.setState({error: null})\n                }, 5000)\n        })         \n    }\n})\n}\n\nhandleChange = (field) => {\nreturn (event) => this.setState({ [field]: event.target.value })\n}\n\nrender() {\nreturn (\n    <div>\n\n        <h2>Puhelinluettelo</h2>\n        <div>\n            <Notification message={this.state.error} type=\"error\"/>\n            <Notification message={this.state.info} type=\"info\"/>\n        </div>\n        <div>\n            <InputField name='rajaa valintoja' state={this.state['newFilter']} handler={this.handleChange('newFilter')} />\n        </div>\n            <Form fieldHandler={this.handleChange} submitHandler={this.addPerson} state={this.state} />\n        <h2>Numerot</h2>\n            <Persons persons={Filter(this.state.persons, this.state.newFilter)} deleteHandler={this.handleDelete.bind(this)} />\n    </div>\n)\n}\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}